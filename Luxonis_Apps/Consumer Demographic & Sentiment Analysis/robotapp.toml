config_version = "2.0"

[info]
name = "Counter App"
description = "App for counting line crossings."

[runtime]
application = "app.py#CounterApp"
workdir = "/app"

[runtime.runs_on]
type = "image"
name = "ghcr.io/luxonis/rh_runtime_ces_app:main"

#[runtime.runs_on]
#type = "custom"
#dockerfile = "Dockerfile"

[[configuration]]
label = "FPS"
key = "fps"
field = "num_range"
step = 1
min = 1
max = 30
initial_value = 9

[[configuration]]
label = "Object detection confidence threshold"
key = "confidence_threshold"
field = "num_range"
step = 0.1
min = 0.1
max = 1
initial_value = 0.7

[[configuration]]
label = "Recording"
key = "recording_enabled"
field = "boolean"
initial_value = true

[[configuration]]
label = "Recording length [minutes]"
key = "recording_length"
field = "num_range"
step = 1
min = 1
max = 5
initial_value = 1

[[configuration]]
label = "Recording frequency [minutes]"
key = "record_frequency_minutes"
field = "num_range"
step = 2
min = 6
max = 61
initial_value = 10

[[configuration]]
label = "Local image storing"
key = "local_storage_enabled"
field = "boolean"
initial_value = false

[[configuration]]
label = "Cloud image storing"
key = "cloud_storage_enabled"
field = "boolean"
initial_value = true

[[configuration]]
label = "Local storage space limit [GIB]"
key = "storage_space_limit"
field = "num_range"
step = 1
min = 1
max = 500
initial_value = 1

[[configuration]]
label = "Delete oldest recording when storage is full"
key = "remove_oldest_enabled"
field = "boolean"
initial_value = false

[[configuration]]
label = "Subdirectory to store images (Always stored to /home/robothub/data/container/common/{subdirectory})"
key = "video_storage_location"
field = "text"
initial_value = "robothub-videos"
prefix = ""

# thermal camera
# gaze estimation as local app
